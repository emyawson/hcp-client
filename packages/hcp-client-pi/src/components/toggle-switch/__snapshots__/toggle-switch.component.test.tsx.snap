// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create toggle with component label renders routing tabs correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    changeHandler={[Function]}
    id="mockToggle"
    label={
      <p>
        This is a label
      </p>
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <p>
          This is a label
        </p>,
        <styled.input
          checked={undefined}
          disabled={false}
          id="mockToggle"
          modelPath=""
          onChange={[Function]}
          onKeyPress={[Function]}
          type="checkbox"
        />,
        <styled.span
          size={24}
        >
          <styled.span
            size={24}
          />
        </styled.span>,
      ],
      "htmlFor": "mockToggle",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "This is a label",
        },
        "ref": null,
        "rendered": "This is a label",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "checked": undefined,
          "disabled": false,
          "id": "mockToggle",
          "modelPath": "",
          "onChange": [Function],
          "onKeyPress": [Function],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.span
            size={24}
          />,
          "size": 24,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "size": 24,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <p>
            This is a label
          </p>,
          <styled.input
            checked={undefined}
            disabled={false}
            id="mockToggle"
            modelPath=""
            onChange={[Function]}
            onKeyPress={[Function]}
            type="checkbox"
          />,
          <styled.span
            size={24}
          >
            <styled.span
              size={24}
            />
          </styled.span>,
        ],
        "htmlFor": "mockToggle",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is a label",
          },
          "ref": null,
          "rendered": "This is a label",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": undefined,
            "disabled": false,
            "id": "mockToggle",
            "modelPath": "",
            "onChange": [Function],
            "onKeyPress": [Function],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.span
              size={24}
            />,
            "size": 24,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "size": 24,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Create toggle with str label renders routing tabs correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    changeHandler={[Function]}
    id="mockSwitch"
    label="Would you like a toggle?"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        "Would you like a toggle?",
        <styled.input
          checked={undefined}
          disabled={false}
          id="mockSwitch"
          modelPath=""
          onChange={[Function]}
          onKeyPress={[Function]}
          type="checkbox"
        />,
        <styled.span
          size={24}
        >
          <styled.span
            size={24}
          />
        </styled.span>,
      ],
      "htmlFor": "mockSwitch",
    },
    "ref": null,
    "rendered": Array [
      "Would you like a toggle?",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "checked": undefined,
          "disabled": false,
          "id": "mockSwitch",
          "modelPath": "",
          "onChange": [Function],
          "onKeyPress": [Function],
          "type": "checkbox",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <styled.span
            size={24}
          />,
          "size": 24,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "size": 24,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          "Would you like a toggle?",
          <styled.input
            checked={undefined}
            disabled={false}
            id="mockSwitch"
            modelPath=""
            onChange={[Function]}
            onKeyPress={[Function]}
            type="checkbox"
          />,
          <styled.span
            size={24}
          >
            <styled.span
              size={24}
            />
          </styled.span>,
        ],
        "htmlFor": "mockSwitch",
      },
      "ref": null,
      "rendered": Array [
        "Would you like a toggle?",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "checked": undefined,
            "disabled": false,
            "id": "mockSwitch",
            "modelPath": "",
            "onChange": [Function],
            "onKeyPress": [Function],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.span
              size={24}
            />,
            "size": 24,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "size": 24,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
