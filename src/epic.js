import { combineEpics } from 'redux-observable';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';

import {
  getDeliveryStatusEpic,
  getThresholdsEpic,
  getTimeIntervalsEpic,
  saveDeliveryEpic,
  setDeliveryStatusEpic,
  getDeliveryEpic,
  validateSessionEpic,
  signOutEpic,
  patientChangeEpic,
  fetchPatientEpic,
  fetchPatientDateRangeEpic,
  getClinicalDataOnDatesChangeEpic,
  getPatientStockEpic,
  submitLostStripsEpic,
  submitManualDeliveryEpic,
  getPatientSearchEpic,
  addPrescriptionEntryEpic,
  createUnsavedPrescriptionEntryEpic,
  getClinicGuidesEpic,
  saveClinicGuideEpic,
  deleteClinicGuideEpic,
  getCurrentPrescriptionEpic,
  getFrequenciesEpic,
  getStripModelsEpic,
  getTherapiesEpic,
  savePrescriptionEpic,
  setCurrentPrescriptionsEpic,
  onPatientChangeResetPrescriptionEpic,
  initializePrescriptionEpic,
  fetchTemporaryPrescriptionReasonsEpic,
  onClinicGuidesUpdateEpic,
  onSaveClinicGuideEpic,
  clearPatientStateEpic,
  onPrescriptionSaveFetchLatestEpic,
  onDeliveryStatusChangeFetchStripStockEpic,
  redirectAfterSignOutEpic,
  redirectToLoginEpic,
  refreshGigyaSessionValidationEpic,
  getAlertsEpic,
  saveAlertsEpic,
  fetchOrgStockEpic,
  addOrgStockEpic,
  changeLanguageEpic,
  clearOrganizationStateEpic,
  modalDomSideEffectsEpics,
  createPatientStatusNotificationModalEpic,
  updateLastDeliveryStatusEpic,
  createSendPatientStatusModalEpic,
  getLastDeliveryStatusEpic,
  userEpic,
  saveDeliveryStatusCommentEpic,
  dtcEpic,
  helpEpic,
  createLoadingModalEpic,
  successLoadingModalEpic,
  removeLoadingModalEpic,
  errorLoadingModalEpic,
  successRequiresConfirmationModalEpic,
  refreshClinicGuidesEpic,
  getDeviceAssociationEpic,
  updateDeviceAssociationEpic,
  redirectAfterDeviceAssignmentCancelEpic,
  updateAssociationOnConfirmEpic,
  resetFeatureStateAfterCancelEpic,
  getAlreadyAssignedPatientEpic,
  redirectAfterDeviceAssignmentDoneEpic,
} from 'src/core';

import {
  PatientStockFactoryImpl,
  PatientListFactoryImpl,
  PatientFactoryImpl,
  DateRangeFactoryImpl,
  ClinicalDataFactoryImpl,
  TimeIntervalFactoryImpl,
  ThresholdFactoryImpl,
  GetDeliveryStatusFactoryImpl,
  GetAlertsFactoryImpl,
  SaveAlertsFactoryImpl,
  TherapiesFactoryImpl,
  FrequenciesFactoryImpl,
  PatientSearchFactoryImpl,
  GetPrescriptionFactoryImpl,
  SavePrescriptionFactoryImpl,
  SaveDeliveryFactoryImpl,
  SetDeliveryStatusFactoryImpl,
  SignOutFactoryImpl,
  GetDeliveryFactoryImpl,
  CurrentUserFactoryImpl,
  GetClinicGuidesFactoryImpl,
  SaveClinicGuideFactoryImpl,
  DeleteClinicGuideFactoryImpl,
  StripModelsFactoryImpl,
  LostStripsFactoryImpl,
  ManualDeliveryFactoryImpl,
  PrescriptionReasonsFactoryImpl,
  GetOrgStockFactoryImpl,
  PermissionsFactory,
  AddOrgStockFactoryImpl,
  SaveDeliveryStatusCommentFactoryImpl,
  DTCFactoryImpl,
  HelpFactoryImpl,
  GetDeviceAssociationFactoryImpl,
  UpdateDeviceAssociationFactoryImpl,
  ProfileTypesFactory,
} from './services';
import { getPatientsListEpic } from './domains/patient/scenes/patients/store/patients.epic';
import {
  getClinicalDataEpic,
  getClinicalDataOnDateRangeEpic,
  setClinicalDataEpic,
} from './dashboards/patient-dashboard/store/patient-dashboard.epic';
import { bootstrapDomainsEpic } from './domains/store/domains.epics';
import {
  permissionsEpic,
  patientPermissionsEpic,
} from './core/permissions/permissions.epics';
import { GetLastDeliveryStatusFactoryImpl } from './services/delivery-status/get-last-delivery-status';
import { CreatePatientFactoryImpl } from './services/patient/create-patient';
import { createPatientEpic } from './widgets/patient/create-patient/store/create-patient.epics';
import { generalLinks } from './domains/general/routes';
import { departmentProfileTypesEpic } from './core/department/department.epics';
import { countryService } from './services/country/country.service';
import { countriesEpic } from './core/countries/countries.epics';

export const rootEpic = combineEpics(
  getPatientStockEpic(PatientStockFactoryImpl({ devMode: false })),
  getPatientsListEpic(PatientListFactoryImpl({ devMode: false })),
  fetchPatientEpic(PatientFactoryImpl({ devMode: false })),
  fetchPatientDateRangeEpic(DateRangeFactoryImpl({ devMode: false })),
  getClinicalDataEpic(ClinicalDataFactoryImpl({ devMode: false })),
  getClinicalDataOnDateRangeEpic(),
  setClinicalDataEpic(),
  getClinicalDataOnDatesChangeEpic(),
  getTimeIntervalsEpic(TimeIntervalFactoryImpl({ devMode: false })),
  getThresholdsEpic(ThresholdFactoryImpl({ devMode: false })),
  getDeliveryStatusEpic(GetDeliveryStatusFactoryImpl({ devMode: false })),
  getAlertsEpic(GetAlertsFactoryImpl({ devMode: false })),
  getCurrentPrescriptionEpic(GetPrescriptionFactoryImpl({ devMode: false })),
  saveAlertsEpic(SaveAlertsFactoryImpl({ devMode: false })),
  getTherapiesEpic(TherapiesFactoryImpl({ devMode: false })),
  getClinicGuidesEpic(GetClinicGuidesFactoryImpl({ devMode: false })),
  saveClinicGuideEpic(SaveClinicGuideFactoryImpl({ devMode: false })),
  deleteClinicGuideEpic(DeleteClinicGuideFactoryImpl({ devMode: false })),
  getFrequenciesEpic(FrequenciesFactoryImpl({ devMode: true })),
  getPatientSearchEpic(PatientSearchFactoryImpl({ devMode: false })),
  getStripModelsEpic(StripModelsFactoryImpl({ devMode: false })),
  savePrescriptionEpic(SavePrescriptionFactoryImpl({ devMode: false })),
  getDeliveryEpic(GetDeliveryFactoryImpl({ devMode: false })),
  saveDeliveryEpic(SaveDeliveryFactoryImpl({ devMode: false })),
  setDeliveryStatusEpic(SetDeliveryStatusFactoryImpl({ devMode: false })),
  validateSessionEpic(),
  signOutEpic(SignOutFactoryImpl()),
  addPrescriptionEntryEpic(),
  createUnsavedPrescriptionEntryEpic(),
  patientChangeEpic(),
  setCurrentPrescriptionsEpic(),
  onPatientChangeResetPrescriptionEpic(),
  submitLostStripsEpic(LostStripsFactoryImpl({ devMode: false })),
  submitManualDeliveryEpic(ManualDeliveryFactoryImpl({ devMode: false })),
  initializePrescriptionEpic(),
  fetchTemporaryPrescriptionReasonsEpic(
    PrescriptionReasonsFactoryImpl({ devMode: false }),
  ),
  onClinicGuidesUpdateEpic(),
  onSaveClinicGuideEpic(),
  clearPatientStateEpic,
  onPrescriptionSaveFetchLatestEpic(),
  onDeliveryStatusChangeFetchStripStockEpic(),
  redirectAfterSignOutEpic(),
  redirectToLoginEpic(),
  refreshGigyaSessionValidationEpic(),
  fetchOrgStockEpic(GetOrgStockFactoryImpl({ devMode: false })),
  addOrgStockEpic(AddOrgStockFactoryImpl({ devMode: false })),
  bootstrapDomainsEpic(),
  permissionsEpic(PermissionsFactory({ devMode: false })),
  changeLanguageEpic(),
  clearOrganizationStateEpic,
  modalDomSideEffectsEpics(),
  createPatientStatusNotificationModalEpic(),
  updateLastDeliveryStatusEpic(),
  patientPermissionsEpic(
    PermissionsFactory({ devMode: false, type: 'patient' }),
  ),
  createSendPatientStatusModalEpic(),
  getLastDeliveryStatusEpic(
    GetLastDeliveryStatusFactoryImpl({ devMode: false }),
  ),
  userEpic(CurrentUserFactoryImpl({ devMode: false })),
  saveDeliveryStatusCommentEpic(
    SaveDeliveryStatusCommentFactoryImpl({ devMode: false }),
  ),
  dtcEpic(DTCFactoryImpl({ devMode: false })),
  helpEpic(HelpFactoryImpl({ devMode: false })),
  createLoadingModalEpic(),
  successLoadingModalEpic(),
  removeLoadingModalEpic(),
  errorLoadingModalEpic(),
  successRequiresConfirmationModalEpic(),
  refreshClinicGuidesEpic(),
  getDeviceAssociationEpic(GetDeviceAssociationFactoryImpl({ devMode: false })),
  updateDeviceAssociationEpic(
    UpdateDeviceAssociationFactoryImpl({ devMode: false }),
  ),
  updateAssociationOnConfirmEpic(),
  redirectAfterDeviceAssignmentCancelEpic(generalLinks.home),
  resetFeatureStateAfterCancelEpic(),
  getAlreadyAssignedPatientEpic(PatientFactoryImpl({ devMode: false })),
  createPatientEpic(CreatePatientFactoryImpl({ devMode: false })),
  departmentProfileTypesEpic(ProfileTypesFactory({ devMode: false })),
  redirectAfterDeviceAssignmentDoneEpic(),
  countriesEpic(countryService({ devMode: false })),
);

const epic$ = new BehaviorSubject(rootEpic);

export const appEpic = (action$, store) =>
  epic$.mergeMap(epic => epic(action$, store, null));

export const injectEpic = asyncEpic => epic$.next(asyncEpic);
