// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GlobalGraphOptions test suite GlobalGraphOptions renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GlobalGraphOptions
    endDate={2018-02-28T08:17:00.000Z}
    firstMeasurementDate={2017-07-02T03:35:00.000Z}
    lastMeasurementDate={2018-02-28T08:17:00.000Z}
    onDatesChange={[Function]}
    startDate={2018-02-14T08:17:00.000Z}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "function",
    "props": Object {
      "cardStyles": Array [
        "noPadding",
      ],
      "children": Array [
        <OptionsWrapper>
          <Option
            borderRight={true}
            pl="2rem"
            width="20rem"
          >
            <DatePickerWrapper>
              <DatePickerIconWrapper>
                <Unknown />
              </DatePickerIconWrapper>
              <DatePicker
                checkIfDateOutOfRange={[Function]}
                disabled={false}
                displayFormat="DD/MM/YYYY"
                earliestDate={2017-07-02T03:35:00.000Z}
                endDate={2018-02-28T08:17:00.000Z}
                isPresetsPanelDisplayed={true}
                lastDate={2018-02-28T08:17:00.000Z}
                locale={undefined}
                onDatesChange={[Function]}
                readOnly={false}
                startDate={2018-02-14T08:17:00.000Z}
              />
            </DatePickerWrapper>
          </Option>
        </OptionsWrapper>,
        <DateSliderWrapper>
          <DateSlider
            disabled={false}
            endDate={2018-02-28T08:17:00.000Z}
            firstMeasurementDate={2017-07-02T03:35:00.000Z}
            lastMeasurementDate={2018-02-28T08:17:00.000Z}
            onDatesChange={[Function]}
            startDate={2018-02-14T08:17:00.000Z}
          />
        </DateSliderWrapper>,
      ],
      "height": "auto",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <Option
            borderRight={true}
            pl="2rem"
            width="20rem"
          >
            <DatePickerWrapper>
              <DatePickerIconWrapper>
                <Unknown />
              </DatePickerIconWrapper>
              <DatePicker
                checkIfDateOutOfRange={[Function]}
                disabled={false}
                displayFormat="DD/MM/YYYY"
                earliestDate={2017-07-02T03:35:00.000Z}
                endDate={2018-02-28T08:17:00.000Z}
                isPresetsPanelDisplayed={true}
                lastDate={2018-02-28T08:17:00.000Z}
                locale={undefined}
                onDatesChange={[Function]}
                readOnly={false}
                startDate={2018-02-14T08:17:00.000Z}
              />
            </DatePickerWrapper>
          </Option>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "borderRight": true,
            "children": <DatePickerWrapper>
              <DatePickerIconWrapper>
                <Unknown />
              </DatePickerIconWrapper>
              <DatePicker
                checkIfDateOutOfRange={[Function]}
                disabled={false}
                displayFormat="DD/MM/YYYY"
                earliestDate={2017-07-02T03:35:00.000Z}
                endDate={2018-02-28T08:17:00.000Z}
                isPresetsPanelDisplayed={true}
                lastDate={2018-02-28T08:17:00.000Z}
                locale={undefined}
                onDatesChange={[Function]}
                readOnly={false}
                startDate={2018-02-14T08:17:00.000Z}
              />
            </DatePickerWrapper>,
            "pl": "2rem",
            "width": "20rem",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <DatePickerIconWrapper>
                  <Unknown />
                </DatePickerIconWrapper>,
                <DatePicker
                  checkIfDateOutOfRange={[Function]}
                  disabled={false}
                  displayFormat="DD/MM/YYYY"
                  earliestDate={2017-07-02T03:35:00.000Z}
                  endDate={2018-02-28T08:17:00.000Z}
                  isPresetsPanelDisplayed={true}
                  lastDate={2018-02-28T08:17:00.000Z}
                  locale={undefined}
                  onDatesChange={[Function]}
                  readOnly={false}
                  startDate={2018-02-14T08:17:00.000Z}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": <Unknown />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "checkIfDateOutOfRange": [Function],
                  "disabled": false,
                  "displayFormat": "DD/MM/YYYY",
                  "earliestDate": 2017-07-02T03:35:00.000Z,
                  "endDate": 2018-02-28T08:17:00.000Z,
                  "isPresetsPanelDisplayed": true,
                  "lastDate": 2018-02-28T08:17:00.000Z,
                  "locale": undefined,
                  "onDatesChange": [Function],
                  "readOnly": false,
                  "startDate": 2018-02-14T08:17:00.000Z,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <DateSlider
            disabled={false}
            endDate={2018-02-28T08:17:00.000Z}
            firstMeasurementDate={2017-07-02T03:35:00.000Z}
            lastMeasurementDate={2018-02-28T08:17:00.000Z}
            onDatesChange={[Function]}
            startDate={2018-02-14T08:17:00.000Z}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "endDate": 2018-02-28T08:17:00.000Z,
            "firstMeasurementDate": 2017-07-02T03:35:00.000Z,
            "lastMeasurementDate": 2018-02-28T08:17:00.000Z,
            "onDatesChange": [Function],
            "startDate": 2018-02-14T08:17:00.000Z,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "function",
      "props": Object {
        "cardStyles": Array [
          "noPadding",
        ],
        "children": Array [
          <OptionsWrapper>
            <Option
              borderRight={true}
              pl="2rem"
              width="20rem"
            >
              <DatePickerWrapper>
                <DatePickerIconWrapper>
                  <Unknown />
                </DatePickerIconWrapper>
                <DatePicker
                  checkIfDateOutOfRange={[Function]}
                  disabled={false}
                  displayFormat="DD/MM/YYYY"
                  earliestDate={2017-07-02T03:35:00.000Z}
                  endDate={2018-02-28T08:17:00.000Z}
                  isPresetsPanelDisplayed={true}
                  lastDate={2018-02-28T08:17:00.000Z}
                  locale={undefined}
                  onDatesChange={[Function]}
                  readOnly={false}
                  startDate={2018-02-14T08:17:00.000Z}
                />
              </DatePickerWrapper>
            </Option>
          </OptionsWrapper>,
          <DateSliderWrapper>
            <DateSlider
              disabled={false}
              endDate={2018-02-28T08:17:00.000Z}
              firstMeasurementDate={2017-07-02T03:35:00.000Z}
              lastMeasurementDate={2018-02-28T08:17:00.000Z}
              onDatesChange={[Function]}
              startDate={2018-02-14T08:17:00.000Z}
            />
          </DateSliderWrapper>,
        ],
        "height": "auto",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Option
              borderRight={true}
              pl="2rem"
              width="20rem"
            >
              <DatePickerWrapper>
                <DatePickerIconWrapper>
                  <Unknown />
                </DatePickerIconWrapper>
                <DatePicker
                  checkIfDateOutOfRange={[Function]}
                  disabled={false}
                  displayFormat="DD/MM/YYYY"
                  earliestDate={2017-07-02T03:35:00.000Z}
                  endDate={2018-02-28T08:17:00.000Z}
                  isPresetsPanelDisplayed={true}
                  lastDate={2018-02-28T08:17:00.000Z}
                  locale={undefined}
                  onDatesChange={[Function]}
                  readOnly={false}
                  startDate={2018-02-14T08:17:00.000Z}
                />
              </DatePickerWrapper>
            </Option>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "borderRight": true,
              "children": <DatePickerWrapper>
                <DatePickerIconWrapper>
                  <Unknown />
                </DatePickerIconWrapper>
                <DatePicker
                  checkIfDateOutOfRange={[Function]}
                  disabled={false}
                  displayFormat="DD/MM/YYYY"
                  earliestDate={2017-07-02T03:35:00.000Z}
                  endDate={2018-02-28T08:17:00.000Z}
                  isPresetsPanelDisplayed={true}
                  lastDate={2018-02-28T08:17:00.000Z}
                  locale={undefined}
                  onDatesChange={[Function]}
                  readOnly={false}
                  startDate={2018-02-14T08:17:00.000Z}
                />
              </DatePickerWrapper>,
              "pl": "2rem",
              "width": "20rem",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <DatePickerIconWrapper>
                    <Unknown />
                  </DatePickerIconWrapper>,
                  <DatePicker
                    checkIfDateOutOfRange={[Function]}
                    disabled={false}
                    displayFormat="DD/MM/YYYY"
                    earliestDate={2017-07-02T03:35:00.000Z}
                    endDate={2018-02-28T08:17:00.000Z}
                    isPresetsPanelDisplayed={true}
                    lastDate={2018-02-28T08:17:00.000Z}
                    locale={undefined}
                    onDatesChange={[Function]}
                    readOnly={false}
                    startDate={2018-02-14T08:17:00.000Z}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Unknown />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "function",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "checkIfDateOutOfRange": [Function],
                    "disabled": false,
                    "displayFormat": "DD/MM/YYYY",
                    "earliestDate": 2017-07-02T03:35:00.000Z,
                    "endDate": 2018-02-28T08:17:00.000Z,
                    "isPresetsPanelDisplayed": true,
                    "lastDate": 2018-02-28T08:17:00.000Z,
                    "locale": undefined,
                    "onDatesChange": [Function],
                    "readOnly": false,
                    "startDate": 2018-02-14T08:17:00.000Z,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <DateSlider
              disabled={false}
              endDate={2018-02-28T08:17:00.000Z}
              firstMeasurementDate={2017-07-02T03:35:00.000Z}
              lastMeasurementDate={2018-02-28T08:17:00.000Z}
              onDatesChange={[Function]}
              startDate={2018-02-14T08:17:00.000Z}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "disabled": false,
              "endDate": 2018-02-28T08:17:00.000Z,
              "firstMeasurementDate": 2017-07-02T03:35:00.000Z,
              "lastMeasurementDate": 2018-02-28T08:17:00.000Z,
              "onDatesChange": [Function],
              "startDate": 2018-02-14T08:17:00.000Z,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
