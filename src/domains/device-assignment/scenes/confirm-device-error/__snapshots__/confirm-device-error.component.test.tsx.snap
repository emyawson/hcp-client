// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Confirm device error test suite Render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    assignedPatientName=""
    deviceInfo={
      Object {
        "brandName": "",
        "modelDevice": "",
        "serialNumber": "",
      }
    }
    onCancel={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Styled(Component)
          display="flex"
          justifyContent="center"
          mb={4}
        >
          <Badge
            bgColor="#CF021B"
            emptyInnerCircle={false}
            icon={
              <Unknown
                height={28}
              />
            }
            size={72}
          />
        </Styled(Component)>,
        <Styled(Component)
          mb={5}
          textAlign="center"
        >
          <styled.h2>
            This device has already been assigned
          </styled.h2>
          <styled.hr />
          <styled.h3>
              has already been assigned to
             
            <strong />
          </styled.h3>
        </Styled(Component)>,
        <Styled(Component)
          mb={5}
        >
          <styled.div>
            <styled.div>
              <Unknown
                height={210}
              />
            </styled.div>
            <styled.div>
              <styled.h4>
                Device already assigned
              </styled.h4>
              <styled.h5>
                 
              </styled.h5>
              <styled.figure>
                S/N
                 
                
              </styled.figure>
            </styled.div>
          </styled.div>
        </Styled(Component)>,
        <styled.div>
          <Button
            accessibilityLabel=""
            buttonStyle="primary"
            disabled={false}
            fontSize="0.875rem"
            fontWeight="bold"
            isCircleIcon={false}
            label="Cancel"
            loading={false}
            minWidth=""
            onClick={[Function]}
          />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <Badge
            bgColor="#CF021B"
            emptyInnerCircle={false}
            icon={
              <Unknown
                height={28}
              />
            }
            size={72}
          />,
          "display": "flex",
          "justifyContent": "center",
          "mb": 4,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "bgColor": "#CF021B",
            "emptyInnerCircle": false,
            "icon": <Unknown
              height={28}
            />,
            "size": 72,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.h2>
              This device has already been assigned
            </styled.h2>,
            <styled.hr />,
            <styled.h3>
                has already been assigned to
               
              <strong />
            </styled.h3>,
          ],
          "mb": 5,
          "textAlign": "center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": "This device has already been assigned",
            },
            "ref": null,
            "rendered": "This device has already been assigned",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "  has already been assigned to",
                " ",
                <strong />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "  has already been assigned to",
              " ",
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "strong",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <styled.div>
            <styled.div>
              <Unknown
                height={210}
              />
            </styled.div>
            <styled.div>
              <styled.h4>
                Device already assigned
              </styled.h4>
              <styled.h5>
                 
              </styled.h5>
              <styled.figure>
                S/N
                 
                
              </styled.figure>
            </styled.div>
          </styled.div>,
          "mb": 5,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.div>
                <Unknown
                  height={210}
                />
              </styled.div>,
              <styled.div>
                <styled.h4>
                  Device already assigned
                </styled.h4>
                <styled.h5>
                   
                </styled.h5>
                <styled.figure>
                  S/N
                   
                  
                </styled.figure>
              </styled.div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Unknown
                  height={210}
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "height": 210,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.h4>
                    Device already assigned
                  </styled.h4>,
                  <styled.h5>
                     
                  </styled.h5>,
                  <styled.figure>
                    S/N
                     
                    
                  </styled.figure>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Device already assigned",
                  },
                  "ref": null,
                  "rendered": "Device already assigned",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "children": " ",
                  },
                  "ref": null,
                  "rendered": " ",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "S/N",
                      " ",
                      "",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "S/N",
                    " ",
                    "",
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <Button
            accessibilityLabel=""
            buttonStyle="primary"
            disabled={false}
            fontSize="0.875rem"
            fontWeight="bold"
            isCircleIcon={false}
            label="Cancel"
            loading={false}
            minWidth=""
            onClick={[Function]}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "accessibilityLabel": "",
            "buttonStyle": "primary",
            "disabled": false,
            "fontSize": "0.875rem",
            "fontWeight": "bold",
            "isCircleIcon": false,
            "label": "Cancel",
            "loading": false,
            "minWidth": "",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Styled(Component)
            display="flex"
            justifyContent="center"
            mb={4}
          >
            <Badge
              bgColor="#CF021B"
              emptyInnerCircle={false}
              icon={
                <Unknown
                  height={28}
                />
              }
              size={72}
            />
          </Styled(Component)>,
          <Styled(Component)
            mb={5}
            textAlign="center"
          >
            <styled.h2>
              This device has already been assigned
            </styled.h2>
            <styled.hr />
            <styled.h3>
                has already been assigned to
               
              <strong />
            </styled.h3>
          </Styled(Component)>,
          <Styled(Component)
            mb={5}
          >
            <styled.div>
              <styled.div>
                <Unknown
                  height={210}
                />
              </styled.div>
              <styled.div>
                <styled.h4>
                  Device already assigned
                </styled.h4>
                <styled.h5>
                   
                </styled.h5>
                <styled.figure>
                  S/N
                   
                  
                </styled.figure>
              </styled.div>
            </styled.div>
          </Styled(Component)>,
          <styled.div>
            <Button
              accessibilityLabel=""
              buttonStyle="primary"
              disabled={false}
              fontSize="0.875rem"
              fontWeight="bold"
              isCircleIcon={false}
              label="Cancel"
              loading={false}
              minWidth=""
              onClick={[Function]}
            />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Badge
              bgColor="#CF021B"
              emptyInnerCircle={false}
              icon={
                <Unknown
                  height={28}
                />
              }
              size={72}
            />,
            "display": "flex",
            "justifyContent": "center",
            "mb": 4,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "bgColor": "#CF021B",
              "emptyInnerCircle": false,
              "icon": <Unknown
                height={28}
              />,
              "size": 72,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.h2>
                This device has already been assigned
              </styled.h2>,
              <styled.hr />,
              <styled.h3>
                  has already been assigned to
                 
                <strong />
              </styled.h3>,
            ],
            "mb": 5,
            "textAlign": "center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": "This device has already been assigned",
              },
              "ref": null,
              "rendered": "This device has already been assigned",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "  has already been assigned to",
                  " ",
                  <strong />,
                ],
              },
              "ref": null,
              "rendered": Array [
                "  has already been assigned to",
                " ",
                Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "strong",
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              <styled.div>
                <Unknown
                  height={210}
                />
              </styled.div>
              <styled.div>
                <styled.h4>
                  Device already assigned
                </styled.h4>
                <styled.h5>
                   
                </styled.h5>
                <styled.figure>
                  S/N
                   
                  
                </styled.figure>
              </styled.div>
            </styled.div>,
            "mb": 5,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <styled.div>
                  <Unknown
                    height={210}
                  />
                </styled.div>,
                <styled.div>
                  <styled.h4>
                    Device already assigned
                  </styled.h4>
                  <styled.h5>
                     
                  </styled.h5>
                  <styled.figure>
                    S/N
                     
                    
                  </styled.figure>
                </styled.div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": <Unknown
                    height={210}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "function",
                  "props": Object {
                    "height": 210,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.h4>
                      Device already assigned
                    </styled.h4>,
                    <styled.h5>
                       
                    </styled.h5>,
                    <styled.figure>
                      S/N
                       
                      
                    </styled.figure>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Device already assigned",
                    },
                    "ref": null,
                    "rendered": "Device already assigned",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "children": " ",
                    },
                    "ref": null,
                    "rendered": " ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "S/N",
                        " ",
                        "",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      "S/N",
                      " ",
                      "",
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              accessibilityLabel=""
              buttonStyle="primary"
              disabled={false}
              fontSize="0.875rem"
              fontWeight="bold"
              isCircleIcon={false}
              label="Cancel"
              loading={false}
              minWidth=""
              onClick={[Function]}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "accessibilityLabel": "",
              "buttonStyle": "primary",
              "disabled": false,
              "fontSize": "0.875rem",
              "fontWeight": "bold",
              "isCircleIcon": false,
              "label": "Cancel",
              "loading": false,
              "minWidth": "",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
