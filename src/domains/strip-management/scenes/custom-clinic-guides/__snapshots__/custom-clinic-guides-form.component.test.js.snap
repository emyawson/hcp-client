// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Custom clinic guides form component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    attachDispatch={[Function]}
    onQuantitySliderChange={[Function]}
    onSubmitSaveClinicGuide={[Function]}
    periods={
      Array [
        Object {
          "id": "1234",
          "label": "Test Period",
        },
      ]
    }
    therapies={
      Array [
        Object {
          "id": "1234",
          "label": "Test Therapy",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "function",
    "props": Object {
      "children": <GridContainer
        gridSpacing="2rem 4rem"
        marginBottom={true}
      >
        <GridItem
          span="12"
        >
          <Styled(Component)
            pt={3}
          >
            <Unknown
              borderColor="#d3e0f6"
              bottomMargin={0}
              bottomMarginHeadline={0}
              textColor="#3D70C4"
              title="Create New Custom Clinical Guide"
            />
          </Styled(Component)>
        </GridItem>
        <GridItem
          span="6"
        >
          <CardHeader
            cardStyles={
              Array [
                "blue",
                "customClinicGuides",
              ]
            }
            title="Custom Clinical Guide Name"
          />
          <Styled(Component)
            label="prescription.customClinicGuides.name"
            model=".name"
            placeholder="Enter a name..."
          />
        </GridItem>
        <GridItem
          span="6"
        >
          <CardHeader
            cardStyles={
              Array [
                "blue",
                "customClinicGuides",
              ]
            }
            title="Patient Therapy"
          />
          <Styled(Component)
            alignItems="stretch"
            display="flex"
          >
            <Dropdown
              autosize={false}
              backspaceRemoves={false}
              clearable={false}
              disabled={false}
              id=""
              label=""
              modelPath=".therapyId"
              multi={false}
              onChange={[Function]}
              optionFontSize="0.875rem"
              options={
                Array [
                  Object {
                    "id": "1234",
                    "label": "Test Therapy",
                  },
                ]
              }
              placeholder="Selection"
              required={true}
              searchable={false}
              selectHeight="3rem"
              selectedOptionPadding="1rem"
              simpleValue={true}
            />
          </Styled(Component)>
        </GridItem>
        <GridItem
          span="6"
        >
          <CardHeader
            cardStyles={
              Array [
                "blue",
                "customClinicGuides",
              ]
            }
            title="Number of Tests"
          />
          <Styled(Component)
            pt={3}
          >
            <Unknown
              component={[Function]}
              mapProps={
                Object {
                  "maxValue": [Function],
                  "minValue": [Function],
                  "onChange": [Function],
                  "rangeMax": 50,
                  "rangeMin": 1,
                }
              }
              model=".quantityRange"
            />
          </Styled(Component)>
        </GridItem>
        <GridItem
          span="6"
        >
          <CardHeader
            cardStyles={
              Array [
                "blue",
                "customClinicGuides",
              ]
            }
            title="Test Frequency"
          />
          <Styled(Component)
            alignItems="stretch"
            display="flex"
          >
            <Dropdown
              autosize={false}
              backspaceRemoves={false}
              clearable={false}
              disabled={false}
              id=""
              label=""
              modelPath=".period"
              multi={false}
              onChange={[Function]}
              optionFontSize="0.875rem"
              options={
                Array [
                  Object {
                    "id": "1234",
                    "label": "Test Period",
                  },
                ]
              }
              placeholder="Selection"
              required={true}
              searchable={false}
              selectHeight="3rem"
              selectedOptionPadding="1rem"
              simpleValue={true}
            />
          </Styled(Component)>
        </GridItem>
        <GridItem
          span="12"
        >
          <styled.div>
            <Unknown
              component={[Function]}
              controlProps={
                Object {
                  "label": "Save Custom Clinical Guide",
                  "type": "submit",
                }
              }
              disabled={
                Object {
                  "valid": false,
                }
              }
              model="createCustomClinicGuide"
              name="createCustomClinicGuideSubmit"
            />
          </styled.div>
        </GridItem>
      </GridContainer>,
      "getDispatch": [Function],
      "initialState": Object {
        "name": "",
        "period": null,
        "quantityRange": Object {
          "max": 50,
          "min": 1,
        },
        "therapyId": null,
      },
      "model": "createCustomClinicGuide",
      "onSubmit": [Function],
      "validators": Object {
        "name": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <GridItem
            span="12"
          >
            <Styled(Component)
              pt={3}
            >
              <Unknown
                borderColor="#d3e0f6"
                bottomMargin={0}
                bottomMarginHeadline={0}
                textColor="#3D70C4"
                title="Create New Custom Clinical Guide"
              />
            </Styled(Component)>
          </GridItem>,
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Custom Clinical Guide Name"
            />
            <Styled(Component)
              label="prescription.customClinicGuides.name"
              model=".name"
              placeholder="Enter a name..."
            />
          </GridItem>,
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Patient Therapy"
            />
            <Styled(Component)
              alignItems="stretch"
              display="flex"
            >
              <Dropdown
                autosize={false}
                backspaceRemoves={false}
                clearable={false}
                disabled={false}
                id=""
                label=""
                modelPath=".therapyId"
                multi={false}
                onChange={[Function]}
                optionFontSize="0.875rem"
                options={
                  Array [
                    Object {
                      "id": "1234",
                      "label": "Test Therapy",
                    },
                  ]
                }
                placeholder="Selection"
                required={true}
                searchable={false}
                selectHeight="3rem"
                selectedOptionPadding="1rem"
                simpleValue={true}
              />
            </Styled(Component)>
          </GridItem>,
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Number of Tests"
            />
            <Styled(Component)
              pt={3}
            >
              <Unknown
                component={[Function]}
                mapProps={
                  Object {
                    "maxValue": [Function],
                    "minValue": [Function],
                    "onChange": [Function],
                    "rangeMax": 50,
                    "rangeMin": 1,
                  }
                }
                model=".quantityRange"
              />
            </Styled(Component)>
          </GridItem>,
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Test Frequency"
            />
            <Styled(Component)
              alignItems="stretch"
              display="flex"
            >
              <Dropdown
                autosize={false}
                backspaceRemoves={false}
                clearable={false}
                disabled={false}
                id=""
                label=""
                modelPath=".period"
                multi={false}
                onChange={[Function]}
                optionFontSize="0.875rem"
                options={
                  Array [
                    Object {
                      "id": "1234",
                      "label": "Test Period",
                    },
                  ]
                }
                placeholder="Selection"
                required={true}
                searchable={false}
                selectHeight="3rem"
                selectedOptionPadding="1rem"
                simpleValue={true}
              />
            </Styled(Component)>
          </GridItem>,
          <GridItem
            span="12"
          >
            <styled.div>
              <Unknown
                component={[Function]}
                controlProps={
                  Object {
                    "label": "Save Custom Clinical Guide",
                    "type": "submit",
                  }
                }
                disabled={
                  Object {
                    "valid": false,
                  }
                }
                model="createCustomClinicGuide"
                name="createCustomClinicGuideSubmit"
              />
            </styled.div>
          </GridItem>,
        ],
        "gridSpacing": "2rem 4rem",
        "marginBottom": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Styled(Component)
              pt={3}
            >
              <Unknown
                borderColor="#d3e0f6"
                bottomMargin={0}
                bottomMarginHeadline={0}
                textColor="#3D70C4"
                title="Create New Custom Clinical Guide"
              />
            </Styled(Component)>,
            "span": "12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Unknown
                borderColor="#d3e0f6"
                bottomMargin={0}
                bottomMarginHeadline={0}
                textColor="#3D70C4"
                title="Create New Custom Clinical Guide"
              />,
              "pt": 3,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "borderColor": "#d3e0f6",
                "bottomMargin": 0,
                "bottomMarginHeadline": 0,
                "textColor": "#3D70C4",
                "title": "Create New Custom Clinical Guide",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Custom Clinical Guide Name"
              />,
              <Styled(Component)
                label="prescription.customClinicGuides.name"
                model=".name"
                placeholder="Enter a name..."
              />,
            ],
            "span": "6",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "cardStyles": Array [
                  "blue",
                  "customClinicGuides",
                ],
                "title": "Custom Clinical Guide Name",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "label": "prescription.customClinicGuides.name",
                "model": ".name",
                "placeholder": "Enter a name...",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Patient Therapy"
              />,
              <Styled(Component)
                alignItems="stretch"
                display="flex"
              >
                <Dropdown
                  autosize={false}
                  backspaceRemoves={false}
                  clearable={false}
                  disabled={false}
                  id=""
                  label=""
                  modelPath=".therapyId"
                  multi={false}
                  onChange={[Function]}
                  optionFontSize="0.875rem"
                  options={
                    Array [
                      Object {
                        "id": "1234",
                        "label": "Test Therapy",
                      },
                    ]
                  }
                  placeholder="Selection"
                  required={true}
                  searchable={false}
                  selectHeight="3rem"
                  selectedOptionPadding="1rem"
                  simpleValue={true}
                />
              </Styled(Component)>,
            ],
            "span": "6",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "cardStyles": Array [
                  "blue",
                  "customClinicGuides",
                ],
                "title": "Patient Therapy",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "alignItems": "stretch",
                "children": <Dropdown
                  autosize={false}
                  backspaceRemoves={false}
                  clearable={false}
                  disabled={false}
                  id=""
                  label=""
                  modelPath=".therapyId"
                  multi={false}
                  onChange={[Function]}
                  optionFontSize="0.875rem"
                  options={
                    Array [
                      Object {
                        "id": "1234",
                        "label": "Test Therapy",
                      },
                    ]
                  }
                  placeholder="Selection"
                  required={true}
                  searchable={false}
                  selectHeight="3rem"
                  selectedOptionPadding="1rem"
                  simpleValue={true}
                />,
                "display": "flex",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "autosize": false,
                  "backspaceRemoves": false,
                  "clearable": false,
                  "disabled": false,
                  "id": "",
                  "label": "",
                  "modelPath": ".therapyId",
                  "multi": false,
                  "onChange": [Function],
                  "optionFontSize": "0.875rem",
                  "options": Array [
                    Object {
                      "id": "1234",
                      "label": "Test Therapy",
                    },
                  ],
                  "placeholder": "Selection",
                  "required": true,
                  "searchable": false,
                  "selectHeight": "3rem",
                  "selectedOptionPadding": "1rem",
                  "simpleValue": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Number of Tests"
              />,
              <Styled(Component)
                pt={3}
              >
                <Unknown
                  component={[Function]}
                  mapProps={
                    Object {
                      "maxValue": [Function],
                      "minValue": [Function],
                      "onChange": [Function],
                      "rangeMax": 50,
                      "rangeMin": 1,
                    }
                  }
                  model=".quantityRange"
                />
              </Styled(Component)>,
            ],
            "span": "6",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "cardStyles": Array [
                  "blue",
                  "customClinicGuides",
                ],
                "title": "Number of Tests",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Unknown
                  component={[Function]}
                  mapProps={
                    Object {
                      "maxValue": [Function],
                      "minValue": [Function],
                      "onChange": [Function],
                      "rangeMax": 50,
                      "rangeMin": 1,
                    }
                  }
                  model=".quantityRange"
                />,
                "pt": 3,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "component": [Function],
                  "mapProps": Object {
                    "maxValue": [Function],
                    "minValue": [Function],
                    "onChange": [Function],
                    "rangeMax": 50,
                    "rangeMin": 1,
                  },
                  "model": ".quantityRange",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Test Frequency"
              />,
              <Styled(Component)
                alignItems="stretch"
                display="flex"
              >
                <Dropdown
                  autosize={false}
                  backspaceRemoves={false}
                  clearable={false}
                  disabled={false}
                  id=""
                  label=""
                  modelPath=".period"
                  multi={false}
                  onChange={[Function]}
                  optionFontSize="0.875rem"
                  options={
                    Array [
                      Object {
                        "id": "1234",
                        "label": "Test Period",
                      },
                    ]
                  }
                  placeholder="Selection"
                  required={true}
                  searchable={false}
                  selectHeight="3rem"
                  selectedOptionPadding="1rem"
                  simpleValue={true}
                />
              </Styled(Component)>,
            ],
            "span": "6",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "cardStyles": Array [
                  "blue",
                  "customClinicGuides",
                ],
                "title": "Test Frequency",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "alignItems": "stretch",
                "children": <Dropdown
                  autosize={false}
                  backspaceRemoves={false}
                  clearable={false}
                  disabled={false}
                  id=""
                  label=""
                  modelPath=".period"
                  multi={false}
                  onChange={[Function]}
                  optionFontSize="0.875rem"
                  options={
                    Array [
                      Object {
                        "id": "1234",
                        "label": "Test Period",
                      },
                    ]
                  }
                  placeholder="Selection"
                  required={true}
                  searchable={false}
                  selectHeight="3rem"
                  selectedOptionPadding="1rem"
                  simpleValue={true}
                />,
                "display": "flex",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "autosize": false,
                  "backspaceRemoves": false,
                  "clearable": false,
                  "disabled": false,
                  "id": "",
                  "label": "",
                  "modelPath": ".period",
                  "multi": false,
                  "onChange": [Function],
                  "optionFontSize": "0.875rem",
                  "options": Array [
                    Object {
                      "id": "1234",
                      "label": "Test Period",
                    },
                  ],
                  "placeholder": "Selection",
                  "required": true,
                  "searchable": false,
                  "selectHeight": "3rem",
                  "selectedOptionPadding": "1rem",
                  "simpleValue": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              <Unknown
                component={[Function]}
                controlProps={
                  Object {
                    "label": "Save Custom Clinical Guide",
                    "type": "submit",
                  }
                }
                disabled={
                  Object {
                    "valid": false,
                  }
                }
                model="createCustomClinicGuide"
                name="createCustomClinicGuideSubmit"
              />
            </styled.div>,
            "span": "12",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Unknown
                component={[Function]}
                controlProps={
                  Object {
                    "label": "Save Custom Clinical Guide",
                    "type": "submit",
                  }
                }
                disabled={
                  Object {
                    "valid": false,
                  }
                }
                model="createCustomClinicGuide"
                name="createCustomClinicGuideSubmit"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "component": [Function],
                "controlProps": Object {
                  "label": "Save Custom Clinical Guide",
                  "type": "submit",
                },
                "disabled": Object {
                  "valid": false,
                },
                "model": "createCustomClinicGuide",
                "name": "createCustomClinicGuideSubmit",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "function",
      "props": Object {
        "children": <GridContainer
          gridSpacing="2rem 4rem"
          marginBottom={true}
        >
          <GridItem
            span="12"
          >
            <Styled(Component)
              pt={3}
            >
              <Unknown
                borderColor="#d3e0f6"
                bottomMargin={0}
                bottomMarginHeadline={0}
                textColor="#3D70C4"
                title="Create New Custom Clinical Guide"
              />
            </Styled(Component)>
          </GridItem>
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Custom Clinical Guide Name"
            />
            <Styled(Component)
              label="prescription.customClinicGuides.name"
              model=".name"
              placeholder="Enter a name..."
            />
          </GridItem>
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Patient Therapy"
            />
            <Styled(Component)
              alignItems="stretch"
              display="flex"
            >
              <Dropdown
                autosize={false}
                backspaceRemoves={false}
                clearable={false}
                disabled={false}
                id=""
                label=""
                modelPath=".therapyId"
                multi={false}
                onChange={[Function]}
                optionFontSize="0.875rem"
                options={
                  Array [
                    Object {
                      "id": "1234",
                      "label": "Test Therapy",
                    },
                  ]
                }
                placeholder="Selection"
                required={true}
                searchable={false}
                selectHeight="3rem"
                selectedOptionPadding="1rem"
                simpleValue={true}
              />
            </Styled(Component)>
          </GridItem>
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Number of Tests"
            />
            <Styled(Component)
              pt={3}
            >
              <Unknown
                component={[Function]}
                mapProps={
                  Object {
                    "maxValue": [Function],
                    "minValue": [Function],
                    "onChange": [Function],
                    "rangeMax": 50,
                    "rangeMin": 1,
                  }
                }
                model=".quantityRange"
              />
            </Styled(Component)>
          </GridItem>
          <GridItem
            span="6"
          >
            <CardHeader
              cardStyles={
                Array [
                  "blue",
                  "customClinicGuides",
                ]
              }
              title="Test Frequency"
            />
            <Styled(Component)
              alignItems="stretch"
              display="flex"
            >
              <Dropdown
                autosize={false}
                backspaceRemoves={false}
                clearable={false}
                disabled={false}
                id=""
                label=""
                modelPath=".period"
                multi={false}
                onChange={[Function]}
                optionFontSize="0.875rem"
                options={
                  Array [
                    Object {
                      "id": "1234",
                      "label": "Test Period",
                    },
                  ]
                }
                placeholder="Selection"
                required={true}
                searchable={false}
                selectHeight="3rem"
                selectedOptionPadding="1rem"
                simpleValue={true}
              />
            </Styled(Component)>
          </GridItem>
          <GridItem
            span="12"
          >
            <styled.div>
              <Unknown
                component={[Function]}
                controlProps={
                  Object {
                    "label": "Save Custom Clinical Guide",
                    "type": "submit",
                  }
                }
                disabled={
                  Object {
                    "valid": false,
                  }
                }
                model="createCustomClinicGuide"
                name="createCustomClinicGuideSubmit"
              />
            </styled.div>
          </GridItem>
        </GridContainer>,
        "getDispatch": [Function],
        "initialState": Object {
          "name": "",
          "period": null,
          "quantityRange": Object {
            "max": 50,
            "min": 1,
          },
          "therapyId": null,
        },
        "model": "createCustomClinicGuide",
        "onSubmit": [Function],
        "validators": Object {
          "name": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <GridItem
              span="12"
            >
              <Styled(Component)
                pt={3}
              >
                <Unknown
                  borderColor="#d3e0f6"
                  bottomMargin={0}
                  bottomMarginHeadline={0}
                  textColor="#3D70C4"
                  title="Create New Custom Clinical Guide"
                />
              </Styled(Component)>
            </GridItem>,
            <GridItem
              span="6"
            >
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Custom Clinical Guide Name"
              />
              <Styled(Component)
                label="prescription.customClinicGuides.name"
                model=".name"
                placeholder="Enter a name..."
              />
            </GridItem>,
            <GridItem
              span="6"
            >
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Patient Therapy"
              />
              <Styled(Component)
                alignItems="stretch"
                display="flex"
              >
                <Dropdown
                  autosize={false}
                  backspaceRemoves={false}
                  clearable={false}
                  disabled={false}
                  id=""
                  label=""
                  modelPath=".therapyId"
                  multi={false}
                  onChange={[Function]}
                  optionFontSize="0.875rem"
                  options={
                    Array [
                      Object {
                        "id": "1234",
                        "label": "Test Therapy",
                      },
                    ]
                  }
                  placeholder="Selection"
                  required={true}
                  searchable={false}
                  selectHeight="3rem"
                  selectedOptionPadding="1rem"
                  simpleValue={true}
                />
              </Styled(Component)>
            </GridItem>,
            <GridItem
              span="6"
            >
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Number of Tests"
              />
              <Styled(Component)
                pt={3}
              >
                <Unknown
                  component={[Function]}
                  mapProps={
                    Object {
                      "maxValue": [Function],
                      "minValue": [Function],
                      "onChange": [Function],
                      "rangeMax": 50,
                      "rangeMin": 1,
                    }
                  }
                  model=".quantityRange"
                />
              </Styled(Component)>
            </GridItem>,
            <GridItem
              span="6"
            >
              <CardHeader
                cardStyles={
                  Array [
                    "blue",
                    "customClinicGuides",
                  ]
                }
                title="Test Frequency"
              />
              <Styled(Component)
                alignItems="stretch"
                display="flex"
              >
                <Dropdown
                  autosize={false}
                  backspaceRemoves={false}
                  clearable={false}
                  disabled={false}
                  id=""
                  label=""
                  modelPath=".period"
                  multi={false}
                  onChange={[Function]}
                  optionFontSize="0.875rem"
                  options={
                    Array [
                      Object {
                        "id": "1234",
                        "label": "Test Period",
                      },
                    ]
                  }
                  placeholder="Selection"
                  required={true}
                  searchable={false}
                  selectHeight="3rem"
                  selectedOptionPadding="1rem"
                  simpleValue={true}
                />
              </Styled(Component)>
            </GridItem>,
            <GridItem
              span="12"
            >
              <styled.div>
                <Unknown
                  component={[Function]}
                  controlProps={
                    Object {
                      "label": "Save Custom Clinical Guide",
                      "type": "submit",
                    }
                  }
                  disabled={
                    Object {
                      "valid": false,
                    }
                  }
                  model="createCustomClinicGuide"
                  name="createCustomClinicGuideSubmit"
                />
              </styled.div>
            </GridItem>,
          ],
          "gridSpacing": "2rem 4rem",
          "marginBottom": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <Styled(Component)
                pt={3}
              >
                <Unknown
                  borderColor="#d3e0f6"
                  bottomMargin={0}
                  bottomMarginHeadline={0}
                  textColor="#3D70C4"
                  title="Create New Custom Clinical Guide"
                />
              </Styled(Component)>,
              "span": "12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Unknown
                  borderColor="#d3e0f6"
                  bottomMargin={0}
                  bottomMarginHeadline={0}
                  textColor="#3D70C4"
                  title="Create New Custom Clinical Guide"
                />,
                "pt": 3,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "borderColor": "#d3e0f6",
                  "bottomMargin": 0,
                  "bottomMarginHeadline": 0,
                  "textColor": "#3D70C4",
                  "title": "Create New Custom Clinical Guide",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardHeader
                  cardStyles={
                    Array [
                      "blue",
                      "customClinicGuides",
                    ]
                  }
                  title="Custom Clinical Guide Name"
                />,
                <Styled(Component)
                  label="prescription.customClinicGuides.name"
                  model=".name"
                  placeholder="Enter a name..."
                />,
              ],
              "span": "6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "cardStyles": Array [
                    "blue",
                    "customClinicGuides",
                  ],
                  "title": "Custom Clinical Guide Name",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "label": "prescription.customClinicGuides.name",
                  "model": ".name",
                  "placeholder": "Enter a name...",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardHeader
                  cardStyles={
                    Array [
                      "blue",
                      "customClinicGuides",
                    ]
                  }
                  title="Patient Therapy"
                />,
                <Styled(Component)
                  alignItems="stretch"
                  display="flex"
                >
                  <Dropdown
                    autosize={false}
                    backspaceRemoves={false}
                    clearable={false}
                    disabled={false}
                    id=""
                    label=""
                    modelPath=".therapyId"
                    multi={false}
                    onChange={[Function]}
                    optionFontSize="0.875rem"
                    options={
                      Array [
                        Object {
                          "id": "1234",
                          "label": "Test Therapy",
                        },
                      ]
                    }
                    placeholder="Selection"
                    required={true}
                    searchable={false}
                    selectHeight="3rem"
                    selectedOptionPadding="1rem"
                    simpleValue={true}
                  />
                </Styled(Component)>,
              ],
              "span": "6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "cardStyles": Array [
                    "blue",
                    "customClinicGuides",
                  ],
                  "title": "Patient Therapy",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "alignItems": "stretch",
                  "children": <Dropdown
                    autosize={false}
                    backspaceRemoves={false}
                    clearable={false}
                    disabled={false}
                    id=""
                    label=""
                    modelPath=".therapyId"
                    multi={false}
                    onChange={[Function]}
                    optionFontSize="0.875rem"
                    options={
                      Array [
                        Object {
                          "id": "1234",
                          "label": "Test Therapy",
                        },
                      ]
                    }
                    placeholder="Selection"
                    required={true}
                    searchable={false}
                    selectHeight="3rem"
                    selectedOptionPadding="1rem"
                    simpleValue={true}
                  />,
                  "display": "flex",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "function",
                  "props": Object {
                    "autosize": false,
                    "backspaceRemoves": false,
                    "clearable": false,
                    "disabled": false,
                    "id": "",
                    "label": "",
                    "modelPath": ".therapyId",
                    "multi": false,
                    "onChange": [Function],
                    "optionFontSize": "0.875rem",
                    "options": Array [
                      Object {
                        "id": "1234",
                        "label": "Test Therapy",
                      },
                    ],
                    "placeholder": "Selection",
                    "required": true,
                    "searchable": false,
                    "selectHeight": "3rem",
                    "selectedOptionPadding": "1rem",
                    "simpleValue": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardHeader
                  cardStyles={
                    Array [
                      "blue",
                      "customClinicGuides",
                    ]
                  }
                  title="Number of Tests"
                />,
                <Styled(Component)
                  pt={3}
                >
                  <Unknown
                    component={[Function]}
                    mapProps={
                      Object {
                        "maxValue": [Function],
                        "minValue": [Function],
                        "onChange": [Function],
                        "rangeMax": 50,
                        "rangeMin": 1,
                      }
                    }
                    model=".quantityRange"
                  />
                </Styled(Component)>,
              ],
              "span": "6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "cardStyles": Array [
                    "blue",
                    "customClinicGuides",
                  ],
                  "title": "Number of Tests",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": <Unknown
                    component={[Function]}
                    mapProps={
                      Object {
                        "maxValue": [Function],
                        "minValue": [Function],
                        "onChange": [Function],
                        "rangeMax": 50,
                        "rangeMin": 1,
                      }
                    }
                    model=".quantityRange"
                  />,
                  "pt": 3,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "function",
                  "props": Object {
                    "component": [Function],
                    "mapProps": Object {
                      "maxValue": [Function],
                      "minValue": [Function],
                      "onChange": [Function],
                      "rangeMax": 50,
                      "rangeMin": 1,
                    },
                    "model": ".quantityRange",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardHeader
                  cardStyles={
                    Array [
                      "blue",
                      "customClinicGuides",
                    ]
                  }
                  title="Test Frequency"
                />,
                <Styled(Component)
                  alignItems="stretch"
                  display="flex"
                >
                  <Dropdown
                    autosize={false}
                    backspaceRemoves={false}
                    clearable={false}
                    disabled={false}
                    id=""
                    label=""
                    modelPath=".period"
                    multi={false}
                    onChange={[Function]}
                    optionFontSize="0.875rem"
                    options={
                      Array [
                        Object {
                          "id": "1234",
                          "label": "Test Period",
                        },
                      ]
                    }
                    placeholder="Selection"
                    required={true}
                    searchable={false}
                    selectHeight="3rem"
                    selectedOptionPadding="1rem"
                    simpleValue={true}
                  />
                </Styled(Component)>,
              ],
              "span": "6",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "cardStyles": Array [
                    "blue",
                    "customClinicGuides",
                  ],
                  "title": "Test Frequency",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "alignItems": "stretch",
                  "children": <Dropdown
                    autosize={false}
                    backspaceRemoves={false}
                    clearable={false}
                    disabled={false}
                    id=""
                    label=""
                    modelPath=".period"
                    multi={false}
                    onChange={[Function]}
                    optionFontSize="0.875rem"
                    options={
                      Array [
                        Object {
                          "id": "1234",
                          "label": "Test Period",
                        },
                      ]
                    }
                    placeholder="Selection"
                    required={true}
                    searchable={false}
                    selectHeight="3rem"
                    selectedOptionPadding="1rem"
                    simpleValue={true}
                  />,
                  "display": "flex",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "function",
                  "props": Object {
                    "autosize": false,
                    "backspaceRemoves": false,
                    "clearable": false,
                    "disabled": false,
                    "id": "",
                    "label": "",
                    "modelPath": ".period",
                    "multi": false,
                    "onChange": [Function],
                    "optionFontSize": "0.875rem",
                    "options": Array [
                      Object {
                        "id": "1234",
                        "label": "Test Period",
                      },
                    ],
                    "placeholder": "Selection",
                    "required": true,
                    "searchable": false,
                    "selectHeight": "3rem",
                    "selectedOptionPadding": "1rem",
                    "simpleValue": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <styled.div>
                <Unknown
                  component={[Function]}
                  controlProps={
                    Object {
                      "label": "Save Custom Clinical Guide",
                      "type": "submit",
                    }
                  }
                  disabled={
                    Object {
                      "valid": false,
                    }
                  }
                  model="createCustomClinicGuide"
                  name="createCustomClinicGuideSubmit"
                />
              </styled.div>,
              "span": "12",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Unknown
                  component={[Function]}
                  controlProps={
                    Object {
                      "label": "Save Custom Clinical Guide",
                      "type": "submit",
                    }
                  }
                  disabled={
                    Object {
                      "valid": false,
                    }
                  }
                  model="createCustomClinicGuide"
                  name="createCustomClinicGuideSubmit"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "component": [Function],
                  "controlProps": Object {
                    "label": "Save Custom Clinical Guide",
                    "type": "submit",
                  },
                  "disabled": Object {
                    "valid": false,
                  },
                  "model": "createCustomClinicGuide",
                  "name": "createCustomClinicGuideSubmit",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
