// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prescription component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Prescription
    getCurrentPrescriptionRequest={[Function]}
    getFrequenciesRequest={[Function]}
    prescriptions={
      Object {
        "permanent": Object {
          "id": 1,
        },
        "temporary": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <f1
            validate={false}
          >
            <styled.div>
              <Unknown
                text={
                  <UNDEFINED>
                    Patient data not found.  
                    Add a guideline here.
                  </UNDEFINED>
                }
              />
            </styled.div>
          </f1>
          <Unknown
            activeItems={
              Array [
                undefined,
              ]
            }
            allowAllItemsClosed={false}
            hasError={false}
            isLoading={undefined}
            label="ACTIVE GUIDELINE"
            labelDisplayLogic={[Function]}
            labelled={true}
            onChange={[Function]}
            sendInitialChangeEvent={false}
          >
            <Unknown
              id={1}
              title={
                <Unknown
                  active={false}
                  contentOnly={true}
                  frequency={undefined}
                  isAccordionHeader={true}
                  isUnsaved={false}
                  nextDeliveryDate={undefined}
                  patientStock={null}
                  period={undefined}
                  prescriptionType={undefined}
                  quantity={undefined}
                  showLoader={true}
                  stripModel={undefined}
                />
              }
            >
              <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                id={1}
                isCurrentlyDisplayed={false}
                isTemporaryPrescription={false}
                isUnsaved={false}
                patientId={null}
              />
            </Unknown>
          </Unknown>
        </styled.div>,
        <f1
          validate={undefined}
        >
          <Unknown
            disabled={true}
            expandHandler={[Function]}
          />
        </f1>,
      ],
      "hasPermissions": Array [
        "ROLE_STRIP_MNG_STRIP_PRESCRIPTION",
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <f1
              validate={false}
            >
              <styled.div>
                <Unknown
                  text={
                    <UNDEFINED>
                      Patient data not found.  
                      Add a guideline here.
                    </UNDEFINED>
                  }
                />
              </styled.div>
            </f1>,
            <Unknown
              activeItems={
                Array [
                  undefined,
                ]
              }
              allowAllItemsClosed={false}
              hasError={false}
              isLoading={undefined}
              label="ACTIVE GUIDELINE"
              labelDisplayLogic={[Function]}
              labelled={true}
              onChange={[Function]}
              sendInitialChangeEvent={false}
            >
              <Unknown
                id={1}
                title={
                  <Unknown
                    active={false}
                    contentOnly={true}
                    frequency={undefined}
                    isAccordionHeader={true}
                    isUnsaved={false}
                    nextDeliveryDate={undefined}
                    patientStock={null}
                    period={undefined}
                    prescriptionType={undefined}
                    quantity={undefined}
                    showLoader={true}
                    stripModel={undefined}
                  />
                }
              >
                <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                  id={1}
                  isCurrentlyDisplayed={false}
                  isTemporaryPrescription={false}
                  isUnsaved={false}
                  patientId={null}
                />
              </Unknown>
            </Unknown>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "children": <styled.div>
                <Unknown
                  text={
                    <UNDEFINED>
                      Patient data not found.  
                      Add a guideline here.
                    </UNDEFINED>
                  }
                />
              </styled.div>,
              "validate": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "children": <Unknown
                  text={
                    <UNDEFINED>
                      Patient data not found.  
                      Add a guideline here.
                    </UNDEFINED>
                  }
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "function",
                "props": Object {
                  "text": <UNDEFINED>
                    Patient data not found.  
                    Add a guideline here.
                  </UNDEFINED>,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "activeItems": Array [
                undefined,
              ],
              "allowAllItemsClosed": false,
              "children": Array [
                <Unknown
                  id={1}
                  title={
                    <Unknown
                      active={false}
                      contentOnly={true}
                      frequency={undefined}
                      isAccordionHeader={true}
                      isUnsaved={false}
                      nextDeliveryDate={undefined}
                      patientStock={null}
                      period={undefined}
                      prescriptionType={undefined}
                      quantity={undefined}
                      showLoader={true}
                      stripModel={undefined}
                    />
                  }
                >
                  <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                    id={1}
                    isCurrentlyDisplayed={false}
                    isTemporaryPrescription={false}
                    isUnsaved={false}
                    patientId={null}
                  />
                </Unknown>,
              ],
              "hasError": false,
              "isLoading": undefined,
              "label": "ACTIVE GUIDELINE",
              "labelDisplayLogic": [Function],
              "labelled": true,
              "onChange": [Function],
              "sendInitialChangeEvent": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "function",
                "props": Object {
                  "children": <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                    id={1}
                    isCurrentlyDisplayed={false}
                    isTemporaryPrescription={false}
                    isUnsaved={false}
                    patientId={null}
                  />,
                  "id": 1,
                  "title": <Unknown
                    active={false}
                    contentOnly={true}
                    frequency={undefined}
                    isAccordionHeader={true}
                    isUnsaved={false}
                    nextDeliveryDate={undefined}
                    patientStock={null}
                    period={undefined}
                    prescriptionType={undefined}
                    quantity={undefined}
                    showLoader={true}
                    stripModel={undefined}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "class",
                  "props": Object {
                    "id": 1,
                    "isCurrentlyDisplayed": false,
                    "isTemporaryPrescription": false,
                    "isUnsaved": false,
                    "patientId": null,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "children": <Unknown
            disabled={true}
            expandHandler={[Function]}
          />,
          "validate": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "disabled": true,
            "expandHandler": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <f1
              validate={false}
            >
              <styled.div>
                <Unknown
                  text={
                    <UNDEFINED>
                      Patient data not found.  
                      Add a guideline here.
                    </UNDEFINED>
                  }
                />
              </styled.div>
            </f1>
            <Unknown
              activeItems={
                Array [
                  undefined,
                ]
              }
              allowAllItemsClosed={false}
              hasError={false}
              isLoading={undefined}
              label="ACTIVE GUIDELINE"
              labelDisplayLogic={[Function]}
              labelled={true}
              onChange={[Function]}
              sendInitialChangeEvent={false}
            >
              <Unknown
                id={1}
                title={
                  <Unknown
                    active={false}
                    contentOnly={true}
                    frequency={undefined}
                    isAccordionHeader={true}
                    isUnsaved={false}
                    nextDeliveryDate={undefined}
                    patientStock={null}
                    period={undefined}
                    prescriptionType={undefined}
                    quantity={undefined}
                    showLoader={true}
                    stripModel={undefined}
                  />
                }
              >
                <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                  id={1}
                  isCurrentlyDisplayed={false}
                  isTemporaryPrescription={false}
                  isUnsaved={false}
                  patientId={null}
                />
              </Unknown>
            </Unknown>
          </styled.div>,
          <f1
            validate={undefined}
          >
            <Unknown
              disabled={true}
              expandHandler={[Function]}
            />
          </f1>,
        ],
        "hasPermissions": Array [
          "ROLE_STRIP_MNG_STRIP_PRESCRIPTION",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <f1
                validate={false}
              >
                <styled.div>
                  <Unknown
                    text={
                      <UNDEFINED>
                        Patient data not found.  
                        Add a guideline here.
                      </UNDEFINED>
                    }
                  />
                </styled.div>
              </f1>,
              <Unknown
                activeItems={
                  Array [
                    undefined,
                  ]
                }
                allowAllItemsClosed={false}
                hasError={false}
                isLoading={undefined}
                label="ACTIVE GUIDELINE"
                labelDisplayLogic={[Function]}
                labelled={true}
                onChange={[Function]}
                sendInitialChangeEvent={false}
              >
                <Unknown
                  id={1}
                  title={
                    <Unknown
                      active={false}
                      contentOnly={true}
                      frequency={undefined}
                      isAccordionHeader={true}
                      isUnsaved={false}
                      nextDeliveryDate={undefined}
                      patientStock={null}
                      period={undefined}
                      prescriptionType={undefined}
                      quantity={undefined}
                      showLoader={true}
                      stripModel={undefined}
                    />
                  }
                >
                  <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                    id={1}
                    isCurrentlyDisplayed={false}
                    isTemporaryPrescription={false}
                    isUnsaved={false}
                    patientId={null}
                  />
                </Unknown>
              </Unknown>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "children": <styled.div>
                  <Unknown
                    text={
                      <UNDEFINED>
                        Patient data not found.  
                        Add a guideline here.
                      </UNDEFINED>
                    }
                  />
                </styled.div>,
                "validate": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "class",
                "props": Object {
                  "children": <Unknown
                    text={
                      <UNDEFINED>
                        Patient data not found.  
                        Add a guideline here.
                      </UNDEFINED>
                    }
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "function",
                  "props": Object {
                    "text": <UNDEFINED>
                      Patient data not found.  
                      Add a guideline here.
                    </UNDEFINED>,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "function",
              "props": Object {
                "activeItems": Array [
                  undefined,
                ],
                "allowAllItemsClosed": false,
                "children": Array [
                  <Unknown
                    id={1}
                    title={
                      <Unknown
                        active={false}
                        contentOnly={true}
                        frequency={undefined}
                        isAccordionHeader={true}
                        isUnsaved={false}
                        nextDeliveryDate={undefined}
                        patientStock={null}
                        period={undefined}
                        prescriptionType={undefined}
                        quantity={undefined}
                        showLoader={true}
                        stripModel={undefined}
                      />
                    }
                  >
                    <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                      id={1}
                      isCurrentlyDisplayed={false}
                      isTemporaryPrescription={false}
                      isUnsaved={false}
                      patientId={null}
                    />
                  </Unknown>,
                ],
                "hasError": false,
                "isLoading": undefined,
                "label": "ACTIVE GUIDELINE",
                "labelDisplayLogic": [Function],
                "labelled": true,
                "onChange": [Function],
                "sendInitialChangeEvent": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "function",
                  "props": Object {
                    "children": <Connect(withState(withHandlers(withProps(withHandlers(withHandlers(lifecycle(Component)))))))
                      id={1}
                      isCurrentlyDisplayed={false}
                      isTemporaryPrescription={false}
                      isUnsaved={false}
                      patientId={null}
                    />,
                    "id": 1,
                    "title": <Unknown
                      active={false}
                      contentOnly={true}
                      frequency={undefined}
                      isAccordionHeader={true}
                      isUnsaved={false}
                      nextDeliveryDate={undefined}
                      patientStock={null}
                      period={undefined}
                      prescriptionType={undefined}
                      quantity={undefined}
                      showLoader={true}
                      stripModel={undefined}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": null,
                    "nodeType": "class",
                    "props": Object {
                      "id": 1,
                      "isCurrentlyDisplayed": false,
                      "isTemporaryPrescription": false,
                      "isUnsaved": false,
                      "patientId": null,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "children": <Unknown
              disabled={true}
              expandHandler={[Function]}
            />,
            "validate": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "disabled": true,
              "expandHandler": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
