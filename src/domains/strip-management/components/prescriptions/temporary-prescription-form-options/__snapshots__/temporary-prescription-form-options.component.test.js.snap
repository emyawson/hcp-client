// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Temporary prescription from component Renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    id="a1"
    onDatesChange={[Function]}
    placeholderText="Select"
    reasons={
      Object {
        "a1": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.div>
          <Unknown
            checkIfDateOutOfRange={[Function]}
            isPresetsPanelDisplayed={false}
            label="Date Range"
            modelPath=".dateRange"
            onChange={[Function]}
          />
        </styled.div>,
        <styled.div>
          <LabelledDropdown
            disabled={false}
            label="Reason"
            modelPath=".reason"
            options={Array []}
            placeholder="Select"
          />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            checkIfDateOutOfRange={[Function]}
            isPresetsPanelDisplayed={false}
            label="Date Range"
            modelPath=".dateRange"
            onChange={[Function]}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "checkIfDateOutOfRange": [Function],
            "isPresetsPanelDisplayed": false,
            "label": "Date Range",
            "modelPath": ".dateRange",
            "onChange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": <LabelledDropdown
            disabled={false}
            label="Reason"
            modelPath=".reason"
            options={Array []}
            placeholder="Select"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "disabled": false,
            "label": "Reason",
            "modelPath": ".reason",
            "options": Array [],
            "placeholder": "Select",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.div>
            <Unknown
              checkIfDateOutOfRange={[Function]}
              isPresetsPanelDisplayed={false}
              label="Date Range"
              modelPath=".dateRange"
              onChange={[Function]}
            />
          </styled.div>,
          <styled.div>
            <LabelledDropdown
              disabled={false}
              label="Reason"
              modelPath=".reason"
              options={Array []}
              placeholder="Select"
            />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              checkIfDateOutOfRange={[Function]}
              isPresetsPanelDisplayed={false}
              label="Date Range"
              modelPath=".dateRange"
              onChange={[Function]}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "checkIfDateOutOfRange": [Function],
              "isPresetsPanelDisplayed": false,
              "label": "Date Range",
              "modelPath": ".dateRange",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <LabelledDropdown
              disabled={false}
              label="Reason"
              modelPath=".reason"
              options={Array []}
              placeholder="Select"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "function",
            "props": Object {
              "disabled": false,
              "label": "Reason",
              "modelPath": ".reason",
              "options": Array [],
              "placeholder": "Select",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
